<?xml version="1.0"?>
<xsd:schema targetNamespace="hybris.de/schemas/hmc/generic" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	xmlns="hybris.de/schemas/hmc/generic" 
	elementFormDefault="qualified">
	
	<xsd:annotation>
		<xsd:documentation>
			 Generic editor configuration schema.
			 Copyright (c) 2000-2013 hybris AG. All rights reserved.
		</xsd:documentation>
	</xsd:annotation>

	<xsd:element name="configuration" type="ConfigurationType"/>

	<xsd:complexType name="ConfigurationType">
		<xsd:choice maxOccurs="unbounded">
			<xsd:element name="defaultmappings" type="ClassMappingsType">
				<xsd:annotation>
					<xsd:documentation>Configuration to replace core classes with custom classes.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="defaultattributechips" type="DefaultAttributeChipsType">
				<xsd:annotation>
					<xsd:documentation>Configuration of the default attribute editor and display chips.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="action" type="ActionType">
				<xsd:annotation>
					<xsd:documentation>Configuration of global actions (create, save and toolbar actions).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="explorertree" type="ExplorerTreeType">
				<xsd:annotation>
					<xsd:documentation>Description of the hmc explorer tree (which nodes are shown etc.).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="type" type="TypeType">
				<xsd:annotation>
					<xsd:documentation>Description of a single type (appearance in the editor, in lists, etc.).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>

	<xsd:simpleType name="modeType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="append"/>
			<xsd:enumeration value="replace"/>
			<xsd:enumeration value="delete"/>
		</xsd:restriction>
	</xsd:simpleType>
	
<!-- defaultmappings -->

	<xsd:complexType name="ClassMappingsType">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="defaultmapping" type="ClassMappingType">
				<xsd:annotation>
					<xsd:documentation>Maps a hmc core class to a custom class which is to be used instead.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="ClassMappingType">
		<xsd:attribute name="source" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>Source class name (fully qualified), i.e. the class which should be replaced.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="target" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>Target class name (fully qualified), i.e. the class which is to be used instead of the source class.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

<!-- defaultattributechips -->

	<xsd:complexType name="DefaultAttributeChipsType">								
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="attributetype" type="AttributeTypeType">
				<xsd:annotation>
					<xsd:documentation>Contains descriptions of default editor and/or display chips for a given attribute type.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>			
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="AttributeTypeType">
		<xsd:choice minOccurs="0" maxOccurs="2">
			<xsd:element name="display" type="ClassConfigType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Configuration of the attribute display chip which is to use for the attributetype (specified in the classname attribute).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>			
			<xsd:element name="editor" type="ClassConfigType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Configuration of the attribute editor chip which is to use for the attributetype (specified in the classname attribute).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>			
		</xsd:choice>
		<xsd:attribute name="classname" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>Class name (fully qualified) of the attribute type for which the default chips are configured.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="ClassConfigType">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="parameter" type="ParameterType">
				<xsd:annotation>
					<xsd:documentation>Parameter which will be provided to the class.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>						
		</xsd:choice>
		<xsd:attribute name="classname" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>Class name (fully qualified) of the chip class this element describes.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

<!-- actions -->
	<xsd:complexType name="ActionType">
		<xsd:choice maxOccurs="unbounded" minOccurs="0">
			<xsd:element name="parameter" type="ParameterType">
				<xsd:annotation>
					<xsd:documentation>A parameter which will be given to the action class.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>

		<xsd:attribute name="classname" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Class name (fully qualified) of the action class.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="scriptURI" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The script URI pointing to a script implementing the action logic.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="name" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Name of the action. Will be used as a key to look up a localized string.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="tooltip" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Tooltip for the action. Will be used as a key to look up a localized string.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="type" use="required">
			<xsd:annotation>
				<xsd:documentation>The type of the action (toolbar, item, create, save, searchresult).</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="toolbar">
						<xsd:annotation>
							<xsd:documentation>This will create an action which will be placed in the toolbar.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="item">
						<xsd:annotation>
							<xsd:documentation>This will create an action which will be placed in an item editor.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="load">
						<xsd:annotation>
							<xsd:documentation>Create action.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="create">
						<xsd:annotation>
							<xsd:documentation>Create action.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="save">
						<xsd:annotation>
							<xsd:documentation>Save action.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="remove">
						<xsd:annotation>
							<xsd:documentation>Remove action.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="searchresult">
						<xsd:annotation>
							<xsd:documentation>This will create an action which will be placed in a search result section.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="icon" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The file name of an icon to use for this action (if applicable).</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="disabledicon" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The file name of a disabled icon to use for this action (if applicable).</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="toolbaricon" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The file name of a toolbar icon to use for this action (if not specified the action will not be show with the toolbar).</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="showtoolbarlabel" type="xsd:boolean" use="optional">
			<xsd:annotation>
				<xsd:documentation>If true a text will be shown next to the icon in the toolbar. Default is false.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="hidebutton" type="xsd:boolean" use="optional">
			<xsd:annotation>
				<xsd:documentation>Hide the Button in the Editor. Default is false.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="autosave" type="xsd:boolean" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					For item actions setting 'autosave' to true will enable the action even when
					the item is not yet created. When pressing the action button the item will automatically be saved first.
					Default is 'false'.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="align" use="optional">
			<xsd:annotation>
				<xsd:documentation>The alignment of the action if it is a toolbar action (left, right) - default is left.</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="left">
						<xsd:annotation>
							<xsd:documentation>This action will be shown on the left side of the toolbar.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="right">
						<xsd:annotation>
							<xsd:documentation>This action will be shown on the right side of the toolbar.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

<!-- hmc explorer -->

	<xsd:complexType name="ExplorerTreeType">
		<xsd:choice maxOccurs="unbounded" minOccurs="1">
			<xsd:element name="group" type="GroupType">
				<xsd:annotation>
					<xsd:documentation>Adds a group node to the explorer tree which in turn can contain other nodes.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="typeref" type="TypeReferenceType">
				<xsd:annotation>
					<xsd:documentation>Add a node to the explorer tree representing a type.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="staticcontent" type="StaticContentNodeType">
				<xsd:annotation>
					<xsd:documentation>Can be used to add a jsp as a node (while not using a chip class or representing a type).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="externalnode" type="ExternalNodeType">
				<xsd:annotation>
					<xsd:documentation>Adds a given chip class as a node which is not representing a type.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="width" type="xsd:positiveInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation>Width of the explorer tree.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="columns" type="xsd:positiveInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation>Number of columns shown in the icon tree view.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="GroupType">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="typeref" type="TypeReferenceType">
				<xsd:annotation>
					<xsd:documentation>Add a node to the explorer tree representing a type.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>			
			<xsd:element name="group" type="GroupType">
				<xsd:annotation>
					<xsd:documentation>Adds a group node to the explorer tree which in turn can contain other nodes.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="staticcontent" type="StaticContentNodeType">
				<xsd:annotation>
					<xsd:documentation>Can be used to add a jsp as a node (while not using a chip class or representing a type).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="externalnode" type="ExternalNodeType">
				<xsd:annotation>
					<xsd:documentation>Adds a given chip class as a node which is not representing a type.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the group node. This name will be used as a key to look up a localized string.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="description" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					A description for the group node (appears in the icon tree view). 
					It will be used as a key to look up a localized string.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="expand" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>If set to 'true' the node will be expanded after a hmc login.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="position" type="xsd:integer" use="optional">
			<xsd:annotation>
				<xsd:documentation>The position of this group within the explorer tree.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
	</xsd:complexType>

	<xsd:complexType name="TypeReferenceType">
		<xsd:attribute name="type" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The code of the type. The appropriate type description is used to determine how the organizer is build.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="description" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					A description for the type reference node (appears in the icon tree view). 
					It will be used as a key to look up a localized string.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="position" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The position of this node in the group.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="StaticContentNodeType">
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the node. This name will be used as a key to look up a localized string.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The URI of the jsp to be used.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="icon" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The url of the icon to be used for the node. (Since 1.3.1)</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="description" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					A description for this node (appears in the icon tree view). 
					It will be used as a key to look up a localized string.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="position" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The position of this node in the group.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
	</xsd:complexType>

	<xsd:complexType name="ExternalNodeType">
		<xsd:attribute name="classname" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The (fully qualified) name of the chip class to be used.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="description" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					A description for this node (appears in the icon tree view). 
					It will be used as a key to look up a localized string.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="position" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The position of this node in the group.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'replace'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

<!-- type descriptions -->

	<xsd:complexType name="TypeType">
		<xsd:sequence minOccurs="0" maxOccurs="1">
			<xsd:element name="organizer" type="OrganizerType" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Contains descriptions on how the different organizer components represent this type.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="defaultreference" type="DefaultReferenceType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Describes how items of this type look (by default) when they are referenced in a different location.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="labels" type="LabelCollectionType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Contains labels.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The code of the type which is described here.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="icon" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Pathname of an icon which should be used for this type.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="useselector" type="xsd:boolean" use="optional">
			<xsd:annotation>
				<xsd:documentation>If useselector is set to true, attribute editors of this type will always show a select box to choose an item of this type.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'replace'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	
	<!-- type - organizer -->
	<xsd:complexType name="OrganizerType">
		<xsd:sequence>
			<xsd:element name="search" type="SearchType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Contains configurations of the organizer search section.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="result" type="ResultType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Contains configurations of the organizer result section.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="editor" type="EditorType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Contains configurations of the organizer editor section.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	
	<!-- type - organizer - search -->
	<xsd:complexType name="SearchType">
		<xsd:sequence>
			<xsd:element name="condition" type="ConditionType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Describes a default condition which will be added to the search section.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="autoperform" type="xsd:boolean" use="optional"/>		
		<xsd:attribute name="savedquery" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Allows you to preset the search using the specified SavedQuery (using the SavedQuery's code/identifier).
					Since 3.0 M1.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="ConditionType">
		<xsd:sequence>
			<xsd:element name="editor" type="ClassConfigType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Set the editor class to be used for this attribute.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="attribute" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>Name of the attribute for which this condition applies.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="operator" use="optional">
			<xsd:annotation>
				<xsd:documentation>Operator to use in this condition.</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="equal"/>
					<xsd:enumeration value="&lt;&gt;"/>
					<xsd:enumeration value="like"/>
					<xsd:enumeration value="starts with"/>
					<xsd:enumeration value="ends with"/>
					<xsd:enumeration value="contains"/>
					<xsd:enumeration value="&gt;"/>
					<xsd:enumeration value="&lt;"/>
					<xsd:enumeration value="&gt;="/>
					<xsd:enumeration value="&lt;="/>
					<xsd:enumeration value="is not null"/>
					<xsd:enumeration value="is null"/>
					<xsd:enumeration value="in"/>
					<xsd:enumeration value="not in"/>
					<xsd:enumeration value="empty"/>
					<!--boolean conditions -->
					<xsd:enumeration value="yes"/>
					<xsd:enumeration value="no"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="allowedoperators" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Comma-separated list of allowed operators for this condition.
					If this attribute is omitted or empty then a default set of operators appropriate 
					for the condition's type is used.
					Since: 3.1-u5.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="defaultvalue" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Default value for this condition's operand (only valid for text and numbers!).</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="sourceattribute" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Name of the enclosing item's attribute from which to get the default value.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="position" type="xsd:integer" use="optional">
			<xsd:annotation>
				<xsd:documentation>The position of this condition within the search.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
	</xsd:complexType>

	<!-- type - organizer - result -->
	<xsd:complexType name="ResultType">
		<xsd:sequence>
			<xsd:element name="listview" type="ListViewType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Configuration of the organizer result section when in 'list view' mode.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="editview" type="EditViewType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Configuration of the organizer result section when in 'edit view' mode.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="treeview" type="TreeViewType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Configuration of the organizer result section when in 'tree view' mode.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="action" type="ActionType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Adds a searchresult action to the result section of this type.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="defaultview" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Sets the default view mode (list, edit, tree) for the organizer result section. 
					If no default view is explicitly set, the list view will used.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="list"/>
					<xsd:enumeration value="edit"/>
					<xsd:enumeration value="tree"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		
	</xsd:complexType>

	<xsd:complexType name="ListViewType">
		<xsd:sequence>
			<xsd:element name="itemlayout" type="ItemDisplayLayoutType" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Define which attributes of the type are shown in the result list (one attribute per column).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="scrollbar" type="xsd:boolean" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="ItemDisplayLayoutType">
		<xsd:annotation>
			<xsd:documentation>Configure how to display a list of attributes of a type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ItemLayoutType">
				<xsd:choice minOccurs="1" maxOccurs="unbounded">
					<xsd:element name="item" type="ItemType">
						<xsd:annotation>
							<xsd:documentation>Show the default representation of the current item in a list.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="attribute" type="AttributeDisplayType">
						<xsd:annotation>
							<xsd:documentation>Configure how to display an attribute.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ItemType">
		<xsd:attribute name="width" type="xsd:positiveInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation>Width of the column in which the item representation appears.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="title" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>title of the column in which the item representation appears.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="AttributeDisplayType">
		<xsd:complexContent>
			<xsd:extension base="AttributeLayoutType">
				<xsd:sequence>
					<xsd:element name="display" type="ClassConfigType" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>Set the display class to be used for this attribute.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="EditViewType">
		<xsd:sequence>
			<xsd:element name="itemlayout" type="ItemEditorLayoutType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Define which attributes of the type are shown in the result list (one attribute per column).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="scrollbar" type="xsd:boolean" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="ItemEditorLayoutType">
		<xsd:annotation>
			<xsd:documentation>Configure how to edit a list of attributes of a type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ItemLayoutType">
				<xsd:choice minOccurs="1" maxOccurs="unbounded">
					<xsd:element name="item" type="ItemType">
						<xsd:annotation>
							<xsd:documentation>Show the default representation of the current item in a list.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="attribute" type="AttributeEditorType" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Configure how to edit an attribute.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AttributeEditorType">
		<xsd:complexContent>
			<xsd:extension base="AttributeLayoutType">
				<xsd:sequence>
					<xsd:element name="editor" type="ClassConfigType" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>Set the editor class to be used for this attribute.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="TreeViewType">
		<xsd:choice minOccurs="0" maxOccurs="2">
			<xsd:element name="itemlayout" type="ItemDisplayLayoutType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Define which attributes of the type are shown in the result tree (attributes are seperated by hyphens).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="explorable" type="ExplorableType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Define which attributes are explorable, i.e. which attributes are shown and explorable below the item nodes.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="scrollbar" type="xsd:boolean" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="ExplorableType">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="attribute" type="AttributeExplorableType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Attribute which should be explorable, i.e. which will be shown below an item node in the tree view result list.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>			
		</xsd:choice>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="AttributeExplorableType">
		<xsd:complexContent>
			<xsd:extension base="AttributeType">
				<xsd:attribute name="suppressroot" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If set to 'true' the appropriate attribute itself will not appear as a node, 
							but all its explorable subnodes will be shown directly (i.e. one node level will be skipped).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- type - organizer - editor -->
	<xsd:complexType name="EditorType">
		<xsd:sequence>
			<xsd:element name="exclude" type="ExcludeType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>
						Contains the attributes which should be excluded (omitted) in the editor of this type. 
						Be sure you don't explicitly add these attributes in any of the other sections!
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="essentials" type="EssentialsType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>
						Contains the attributes which are 'essential' for this type. 
						These attributes will be shown on top of every tab in the editor.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="tab" type="TabType" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Describes one tab of the editor, which in turn contains sections and attributes.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="customtab" type="CustomTabType" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>
							Describes a custom tab of the editor which is not using the generic editor approach, but 
							which design is totally controllable by the developer.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="tabref" type="TabRefType" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Using this tag you can re-use other tab definitions (referencing by their id).</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="wizard" type="xsd:boolean" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					If set to 'true' the editor will include wizard-like 'next' and 'previous' buttons to switch between 
					the different tabs.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="ExcludeType">
		<xsd:sequence>
			<xsd:element name="exclusion" type="AtomicEditorType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>
						Attribute which should be excluded from this editor.
						Thus you are able to exclude single attributes completely from an editor if you do not configure it anywhere else.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="EssentialsType">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="table" type="TableType">
				<xsd:annotation>
					<xsd:documentation>
						Configure the layout of the type's attributes using a table layout. This layout mimics 
						the html table element, so you can use a few well known features of that element.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="listlayout" type="ListLayoutType">
				<xsd:annotation>
					<xsd:documentation>Configure the layout of the type's attributes using a list layout.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="columnlayout" type="ColumnLayoutType">
				<xsd:annotation>
					<xsd:documentation>
						Configure the layout of the type's attributes using a column layout. 
						A column layout is just a convenient way to configure a table with only two columns.
						So each row inside a columnlayout may only contain up to 2 elements.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="TableType">
		<xsd:complexContent>
			<xsd:extension base="LayoutType">
				<xsd:sequence>
					<xsd:element name="tr" type="TRType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Describes one row of an editor table (works just like the html tr element).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="mode" type="modeType" use="optional">
					<xsd:annotation>
						<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="TRType">
		<xsd:complexContent>
			<xsd:extension base="LayoutType">
				<xsd:sequence>
					<xsd:element name="td" type="TDType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Describes the content of one table cell of an editor table (works just like the html td element).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="TDType">
		<xsd:complexContent>
			<xsd:extension base="LayoutType">
				<xsd:choice maxOccurs="unbounded" minOccurs="0">
					<xsd:element name="attribute" type="AttributeChipType">
						<xsd:annotation>
							<xsd:documentation>Describes an attribute editor.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="customattributechip" type="CustomAttributeChipType">
						<xsd:annotation>
							<xsd:documentation>Describes a custom attribute editor chip.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="customchip" type="CustomChipType">
						<xsd:annotation>
							<xsd:documentation>
								Configures a custom attribute editor which is not necessarily an attribute chip 
								This way you could provide you own class (with own parameters) and/or your own jsp.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="table" type="TableType">
						<xsd:annotation>
							<xsd:documentation>Describes a (nested) table layout of the type's attributes.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="listlayout" type="ListLayoutType">
						<xsd:annotation>
							<xsd:documentation>Describes a (nested) list layout of the type's attributes.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>					
					<xsd:element name="inlineshortcut" type="InlineShortcutType">
						<xsd:annotation>
							<xsd:documentation>
								Adds a so called inlineshortcut. This is a (short) result list of a search for this item (or one
								of its attributes) within other types/items.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>										
					<xsd:element name="shortcut" type="ShortcutType">
						<xsd:annotation>
							<xsd:documentation>
								A so called shortcut (a button) to the search or creation of other items which contain
								this item or one of its attributes.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="action" type="ActionType">
						<xsd:annotation>
							<xsd:documentation>Adds an item action to this type's editor.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>					
					<xsd:element name="text" type="TextChipType">
						<xsd:annotation>
							<xsd:documentation>Describes an attribute editor.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>				
				</xsd:choice>
				<xsd:attribute name="colspan" type="xsd:positiveInteger" use="optional" default="1">
					<xsd:annotation>
						<xsd:documentation>Just like in an html table this configures the column spanning of a td element.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rowspan" type="xsd:positiveInteger" use="optional" default="1">
					<xsd:annotation>
						<xsd:documentation>Just like in an html table this configures the row spanning of a td element.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AttributeChipType">
		<xsd:sequence minOccurs="0" maxOccurs="2">
			<xsd:choice>
				<xsd:element name="defaulteditor" type="AtomicEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor using the default layout for the data type of the attribute</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="customeditor" type="CustomEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor using the default layout for the data type of the attribute</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="stringeditor" type="StringEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for string values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="stringselecteditor" type="AtomicEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for string values in select box</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="textareaeditor" type="TextAreaEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing an enhanced text area and a simple input field view for string values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="wysiwygeditor" type="WysiwygEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing an wysiwyg text area for string values containing html elements</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="integereditor" type="LongEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for integer values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="shorteditor" type="LongEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for short values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="byteeditor" type="LongEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for byte values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="longeditor" type="LongEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for long values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="doubleeditor" type="AtomicEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for double values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="floateditor" type="AtomicEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for float values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="charactereditor" type="AtomicEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for character values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="booleaneditor" type="AtomicEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for boolean values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="advancedbooleaneditor" type="AdvancedBooleanEditorType">
					<xsd:annotation>
						<xsd:documentation>@since 2.00 Advanced editor for boolean values</xsd:documentation>
					</xsd:annotation>
				</xsd:element>				
				<xsd:element name="dateeditor" type="AtomicEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for date values.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="datetimeeditor" type="DateTimeEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing a time and a date input field.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="longasdateeditor" type="AtomicEditorType">
					<xsd:annotation>
						<xsd:documentation>Default editor for date values based on a long.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="longasdatetimeeditor" type="AtomicEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing a time and a date input field based on a long.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="javaclasseditor" type="AtomicEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor for java class values.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="enumerationvalueselecteditor" type="EnumerationValueSelectEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor for enumeration values as dropdown.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="referenceeditor" type="ReferenceEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing editing for references</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="partofreferenceeditor" type="PartOfReferenceEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing editing for references to one item of a part-of relation</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="referencecollectioneditor" type="ReferenceCollectionEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing editing for collection of references</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="referencemultiselecteditor" type="ReferenceMultiSelectEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor for reference collections, allows selection of one or more items.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="collectioneditor" type="CollectionEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing editing for collection of atomic types</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="subtypeselecteditor" type="SubTypeSelectEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing a list of subtypes.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="specialeditor" type="SpecialEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing editing for special attributes or other special situations</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mediaeditor" type="MediaEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing preview of media items</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="uploadtomediaeditor" type="UploadToMediaEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing preview of media items</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="downloadmediaeditor" type="DownloadMediaEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing preview of media items</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mapeditor" type="MapEditorType">
					<xsd:annotation>
						<xsd:documentation>Editor providing map editing.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="specialcreator" type="SpecialCreatorType">
					<xsd:annotation>
						<xsd:documentation>If you need a special creator or wizard for this attribute you can specify it here.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>Name (qualifier) of the type's attribute.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="width" type="xsd:positiveInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation>Width of the attribute editor.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="labelwidth" type="xsd:nonNegativeInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation>Width of the attribute label</xsd:documentation>
			</xsd:annotation>						
		</xsd:attribute>		
		<xsd:attribute name="maxlength" type="xsd:positiveInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation>With maxlength you can restrict the entry length in some text editors (e.g. in stringeditor and textareaeditor)</xsd:documentation>
			</xsd:annotation>						
		</xsd:attribute>	
		<xsd:attribute name="hidelabel" type="xsd:boolean" use="optional">
			<xsd:annotation>
				<xsd:documentation>If 'true' the label of the attribute will not be shown.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="editable" type="xsd:boolean" use="optional">
			<xsd:annotation>
				<xsd:documentation>If 'false' the attribute editor will not be editable despite of any restrictions or other settings, so it works independently from the access rights and the 'writable' state of the attribute itself.
				If 'true' (default) nothing will happen. The purpose of this tag is: even if the user has the right to edit the respective attribute and the attribute is writable, he may want to provide a non-editable editor in the hmc. To configure this, you can set the 'editable tag' to 'false'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
		<xsd:attribute name="descriptionattribute" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Name of description attribute.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
				<xsd:attribute name="position" type="xsd:integer" use="optional">
					<xsd:annotation>
						<xsd:documentation>The position of this attribute within the editor.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>		
	</xsd:complexType>

	<xsd:complexType name="AtomicEditorType">
		<xsd:choice maxOccurs="unbounded" minOccurs="0">
			<xsd:element name="parameter" type="ParameterType">
				<xsd:annotation>
					<xsd:documentation>A parameter which will be given to the custom chip class.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="attribute" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Name (qualifier) of the type's attribute.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="DateTimeEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="wrapvalues" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the date and time editor will be shown one below the other rather 
							than next to each other.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			<xsd:attribute name="timewidth" type="xsd:positiveInteger" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						DEPRECATED! The width of the time editor field will be calculated 
						based on the width of the whole datetime editor!
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="MediaEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="restriction" type="ConditionType">
						<xsd:annotation>
							<xsd:documentation>
								Set this to refine the search conditions which will be used when opening 
								the search for an item which this attribute references.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preset" type="PresetType">
						<xsd:annotation>
							<xsd:documentation>Sets a preset for creating new items using the 'create' button of this list.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:attribute name="hideimage" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the image which is represented by the media item will not be shown.
							Instead there will only be a text link (consisting of the media's code) to open the media item in its editor.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="UploadToMediaEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="presettype" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The type of this attribute. Must be a subtype of the ComposedType 'Media'.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="DownloadMediaEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="presettype" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The type of this attribute. Must be a subtype of the ComposedType 'Media'.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="MapEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:sequence>
					<xsd:element name="keyeditor" type="ClassConfigType" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>Configuration of the attribute editor chip which is to use for the key editor (specified in the classname attribute).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>			
					<xsd:element name="valueeditor" type="ClassConfigType" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>Configuration of the attribute editor chip which is to use for the value editor (specified in the classname attribute).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>			
				</xsd:sequence>
				<xsd:attribute name="add" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' (default) the 'add' icon will be enabled (if the attribute is editable).
							If 'false' the icon will be disabled.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="remove" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' (default) the 'delete' icon will be enabled (if the attribute is editable).
							If 'false' the icon will be disabled.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="keywidth" type="xsd:positiveInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Using this attribute you can specify the width of the key editor and thus
							overrule the standard behaviour which gives both editors the same width.
							The overall width of the map editor will still be set via the width attribute
							of the 'attribute' tag.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="keyname" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Using this attribute you can specify the name of the key column.
							The name will be used to look up a localized string.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="valuename" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Using this attribute you can specify the name of the value column.
							The name will be used to look up a localized string.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="CustomEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="classname" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The (fully qualified) class name of the custom editor chip.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="StringEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="encrypted" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>Setting this to 'true' will result in a password editor field.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="LongEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="dropdown" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' this editor will present a dropdown list to choose a number between min and max value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="minvalue" type="xsd:long" use="optional">
					<xsd:annotation>
						<xsd:documentation>The minimum value allowed in the editor.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="maxvalue" type="xsd:long" use="optional">
					<xsd:annotation>
						<xsd:documentation>The maximum value allowed in the editor.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="defaultvalue" type="xsd:long" use="optional">
					<xsd:annotation>
						<xsd:documentation>The default value allowed in the editor.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="EnumerationValueSelectEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="localized" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the entries of the selecteditor are used as keys to look up localized strings.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="showopentype" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the 'open type' icon will be shown. Default is 'false'.
							Since 2.20 SP1.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="noselectionname" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the localization key whose value will be displayed as null value (no selection)
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ReferenceEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="restriction" type="ConditionType">
						<xsd:annotation>
							<xsd:documentation>
								Set this to refine the search conditions which will be used when opening 
								the search for an item which this attribute references.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preset" type="PresetType">
						<xsd:annotation>
							<xsd:documentation>Sets a preset for creating new items using the 'create' button of this list.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:attribute name="presetsearchtype" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Set this to refine the searchtype which will be used when opening 
							the search for an item which this attribute references.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="autoperform" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the search will be immediately performed when the search icon is clicked
							and the result will show up (instead of requiring another 'search button' to be clicked).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="autocomplete" type="xsd:boolean" use="optional" default="true">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the editor will take the form of an autocomplete component (using ajax requests to show a list of possible hits after the user made an entry).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="noselectionname" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Specifies the localization key whose value will be displayed as null value (no selection)
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="PartOfReferenceEditorType">
		<xsd:complexContent>
			<xsd:extension base="ReferenceEditorType">
				<xsd:attribute name="source" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The name of the attribute from which to obtain the reference list.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="SubTypeSelectEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="roottype" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The name of the type for which to show all its sub types to choose from.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="SpecialEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="classname" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The (fully qualified) name of the class representing the editor.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="parameter" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>A parameter which can be provided to the editor class.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="TextAreaEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="rows" type="xsd:positiveInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>Number of rows to use for the textarea.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="cols" type="xsd:positiveInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>Number of columns to use for the textarea.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="expanded" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>If 'true' the textarea will be expanded by default.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="wrap" type="xsd:boolean" use="optional" default="true">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the entries in the textarea will be wrapped at the end of each line.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="base64" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the entries in the textarea will be base64 encoded on client side and decoded on server side.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="AdvancedBooleanEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="truename" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Defines the name of the 'true' value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="falsename" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>
							Defines the name of the 'false' value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="nullname" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Defines the name of the 'null' value.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="wrapvalues" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the options are one below the other.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="WysiwygEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="config" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							WYSIWYG editor configuration string. The specified value will be inserted (as is) into the argument list of the tinyMCE.init function. 
							Please copy, paste and edit the provided example below.  
							EXAMPLE:						
								theme : 'advanced',
 								convert_urls : false,
								plugins : 'table,save,advhr,advimage,advlink,emotions,iespell,insertdatetime,searchreplace,print,contextmenu,hybris,safari,charcount',
								theme_advanced_buttons1_add : 'fontselect,fontsizeselect',
								theme_advanced_buttons2_add : 'separator,insertdate,inserttime,separator,forecolor,backcolor',
								theme_advanced_buttons2_add_before: 'cut,copy,paste,separator,search,replace,separator',
								theme_advanced_buttons3_add_before : 'tablecontrols,separator',
								theme_advanced_buttons3_add : 'emotions,iespell,advhr,separator,medialink,anyitemlink,preview,charcount',
								theme_advanced_toolbar_location : 'top',
								theme_advanced_toolbar_align : 'left',
								plugin_insertdate_dateFormat : '%Y-%m-%d',
								plugin_insertdate_timeFormat : '%H:%M:%S',
								valid_elements: '+a[id|style|rel|rev|charset|hreflang|dir|lang|tabindex|accesskey|type|name|href|target|title|class|onfocus|onblur|onclick|ondblclick|onmousedown|onmouseup|onmouseover|onmousemove|onmouseout|onkeypress|onkeydown|onkeyup],-strong[class|style],-b[class|style],-em[class|style],-i[class|style],-strike[class|style],-u[class|style],#p[id|style|dir|class|align],-ol[class|style],-ul[class|style],-li[class|style],br,img[id|dir|lang|longdesc|usemap|style|class|src|onmouseover|onmouseout|border|alt=|title|hspace|vspace|width|height|align],-sub[style|class],-sup[style|class],-blockquote[dir|style],-table[border=0|cellspacing|cellpadding|width|height|class|align|summary|style|dir|id|lang|bgcolor|background|bordercolor],-tr[id|lang|dir|class|rowspan|width|height|align|valign|style|bgcolor|background|bordercolor],tbody[id|class],thead[id|class],tfoot[id|class],-td[id|lang|dir|class|colspan|rowspan|width|height|align|valign|style|bgcolor|background|bordercolor|scope],-th[id|lang|dir|class|colspan|rowspan|width|height|align|valign|style|scope],caption[id|lang|dir|class|style],-div[id|dir|class|align|style],-span[style|class|align],-pre[class|align|style],address[class|align|style],-h1[id|style|dir|class|align],-h2[id|style|dir|class|align],-h3[id|style|dir|class|align],-h4[id|style|dir|class|align],-h5[id|style|dir|class|align],-h6[id|style|dir|class|align],hr[class|style],-font[face|size|style|id|class|dir|color],dd[id|class|title|style|dir|lang],dl[id|class|title|style|dir|lang],dt[id|class|title|style|dir|lang]',
								extended_valid_elements : 'a[name|href|class|target|title|onclick],img[class|src|border=0|alt|title|hspace|vspace|width|height|align|onmouseover|onmouseout|name],hr[class|width|size|noshade],font[face|size|color|style],span[class|align|style],style[*]',
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="css" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Name of the css file which should be used for this editor.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="CollectionEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:sequence>
					<xsd:element name="editor" type="ClassConfigType" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>Configuration of the attribute editor chip which is to use for the elements of the collection (specified in the classname attribute).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>			
				</xsd:sequence>
				<xsd:attribute name="resortable" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>If 'true' the list will contain the appropriate buttons to resort the list.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="addremove" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the list will contain the appropriate buttons to add and remove entries to/from the list.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="title" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Using this attribute you can specify the title of the list.
							The title attribute will be used to look up a localized string.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="editable" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' (default) the list's entries will be editable (after they have been created).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ReferenceCollectionEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:choice maxOccurs="unbounded" minOccurs="0">
					<xsd:element name="restriction" type="ConditionType">
						<xsd:annotation>
							<xsd:documentation>
								Set this to refine the search conditions which will be used when opening 
								the search for an item which this attribute references.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preset" type="PresetType">
						<xsd:annotation>
							<xsd:documentation>Sets a preset for creating new items using the 'create' button of this list.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="itemlayout" type="ItemDisplayLayoutType" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>Configures the attribute display chips to be shown in the list when the list is not editable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="itemeditorlayout" type="ItemEditorLayoutType" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>Configures the attribute editor chips to be shown in the list when the list is editable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:attribute name="presetsearchtype" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Set this to refine the searchtype which will be used when opening 
							the search for an item which this attribute references.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="autoperform" type="xsd:boolean" use="optional" default="false">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the search will be immediately performed when the search icon is clicked
							and the result will show up (instead of requiring another 'search button' to be clicked).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="resortable" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>If 'true' the list will contain the appropriate buttons to resort the list.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="addremove" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							DEPRECATED! Please use 'add' and 'remove' instead!
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="add" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the list will contain the appropriate buttons to add entries to the list.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="remove" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the list will contain the appropriate buttons to remove entries from the list.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="create" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If 'true' the list will contain the appropriate button to create entries for the list.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="externalcreate" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If set to 'false' there will be no new editor window if you click on the create button.
							This will only take effect if 'editable' is also set to true!
							Instead the new item will be created within the editor as a new, empty entry.
							Note that if there are attributes that are non optional and that are not shown in the list editor
							the create process will fail! Also if 'externalcreate' is false, the current list element type will
							be used for the new item. You will not be able to create a subtype instead!
							Default is 'true' (clicking the create button will result in a new editor window).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="considersubtypes" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							If set to 'false' there will be no subtype select window if you click on the create button.
							Instead the lists element type will be automatically used to create a new item.
							Default is 'true' (you can select subtypes if there are any).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="presetattribute" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Sets the name of the attribute which should be filled with the source item when adding (=creating) a new entry.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="maxcount" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>Sets the maximum number of entries which should be visible in the list.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="autosave" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Setting 'autosave' to true will enable the add and/or create buttons even when
							the item is not yet created (provided 'add' or 'create' are allowed at all by setting the
							appropriate attributes). When pressing the add or create button the item will automatically be saved first.
							Default is 'true'.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="editable" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Setting 'editable' to true will make the list's elements editable, i.e. it will behave similar to
							the searchresult list when using its edit view. Default is 'false'.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="typeattribute" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							When using 'typeattribute' you provide the name of an attribute in which a ComposedType
							is found that will be used as type of this list's elements (items).
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="showsearcheditor" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Setting 'showsearcheditor' to 'true' will show an autocomplete editor at bottom of the list. With that editor
							you can search for an existing item which will be added to the list automatically when selected.
							Default is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="prohibitopening" type="xsd:boolean" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							Setting 'prohibitopening' to 'true' will cause the list editor to not allow you to open any of the
							list's entries. I.e. you cannot open an entry by either double-clicking on it or clicking on
							the entry's icon. And you can not select any entry and use the context menu to open the entries.
							In most cases this option is most useful to prohibit users to change any items unintentionally
							or to get them confused by all the possibilities (context menus, opening additional editors etc.).
							The best example would be a wizard in which a reference collection editor is shown (e.g. to just
							select some items). In such a case you often wouldn't want the user to open a single item from within
							the editor.
							Default is false.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ReferenceMultiSelectEditorType">
		<xsd:complexContent>
			<xsd:extension base="AtomicEditorType">
				<xsd:attribute name="size" type="xsd:positiveInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							This is the vertical size (= number of visible rows) of the selectbox. 
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="selectionof" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>
							The name of an attribute in the current enclosing item containing a collection of items to use for this selection editor.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="CustomAttributeChipType">
		<xsd:complexContent>
			<xsd:extension base="AttributeChipType">
				<xsd:attribute name="classname" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The (fully qualified) class name of the custom attribute editor chip.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="TextChipType">
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the text chip which will be used as key to find the text in the localization properties.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="width" type="xsd:positiveInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation>Width of the text chip.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="position" type="xsd:integer" use="optional">
			<xsd:annotation>
				<xsd:documentation>The position of this text within the columlayout.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
	</xsd:complexType>

	<xsd:complexType name="VoidType"/>

	<xsd:complexType name="CustomChipType">
		<xsd:choice maxOccurs="unbounded" minOccurs="0">
			<xsd:element name="parameter" type="ParameterType">
				<xsd:annotation>
					<xsd:documentation>A parameter which will be given to the custom chip class.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="classname" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The (fully qualified) class name of the custom chip.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="jsp" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					The file name of a jsp that is used to render this chip (this allows you to use 
					different jsp's to provide different views for the same chip class).
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="ParameterType">
		<xsd:attribute name="key" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the parameter's key.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="value" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The parameter's (string) value.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="LabelCollectionType">
		<xsd:choice maxOccurs="unbounded">
			<xsd:element name="label" type="LabelType">
				<xsd:annotation>
					<xsd:documentation>A label!</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	
	<xsd:complexType name="LabelType">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="parameter" type="ParameterType">
				<xsd:annotation>
					<xsd:documentation>A parameter which will be accessible to the label chip.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the label.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="SpecialCreatorType">
		<xsd:attribute name="classname" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The (fully qualified) name of the special creator class.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="TabType">
		<xsd:choice maxOccurs="unbounded" minOccurs="0">
			<xsd:element name="section" type="SectionType">
				<xsd:annotation>
					<xsd:documentation>Adds a section to the tab.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="defaultsection" type="DefaultSectionType">
				<xsd:annotation>
					<xsd:documentation>
						Adds a default section to the tab. 'Default' means that every attribute which is not explicitly
						described elsewhere in this editor will be displayed in this section.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>			
		</xsd:choice>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of this tab. The name will be used as a key to look up a localized string.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="id" type="xsd:NCName" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Assigns an ID to this tab. This is necessary if you want to re-use this tab in other
					editors using the 'tabref' element.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="position" type="xsd:integer" use="optional">
			<xsd:annotation>
				<xsd:documentation>The position of this tab within the editor.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
	</xsd:complexType>

	<xsd:complexType name="SectionType">
		<xsd:choice maxOccurs="unbounded" minOccurs="0">
			<xsd:element name="table" type="TableType">
				<xsd:annotation>
					<xsd:documentation>
						Configure the layout of the type's attributes using a table layout. This layout mimics 
						the html table element, so you can use a few well known features of that element.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="listlayout" type="ListLayoutType">
				<xsd:annotation>
					<xsd:documentation>Configure the layout of the type's attributes using a list layout.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="columnlayout" type="ColumnLayoutType">
				<xsd:annotation>
					<xsd:documentation>
						Configure the layout of the type's attributes using a column layout. 
						A column layout is just a convenient way to configure a table with only two columns.
						So each row inside a columnlayout may only contain up to 2 elements.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the section which will be used as a key to look up a localized string.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="position" type="xsd:integer" use="optional">
			<xsd:annotation>
				<xsd:documentation>The position of this section within the tab.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
	</xsd:complexType>

	<xsd:complexType name="DefaultSectionType">
		<xsd:sequence>
			<xsd:element name="exclusion" type="AtomicEditorType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>
						Attribute which should be excluded from this default section.
						Thus you are able to exclude single attributes completely from an editor if you do not configure it anywhere else.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the default section which will be used as a key to look up a localized string.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="preferred" type="xsd:boolean" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					If 'true' this section should be preferred over possible other default
					sections within this editor.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="CustomTabType">
		<xsd:complexContent>
			<xsd:extension base="TabType">
				<xsd:attribute name="classname" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The (fully qualified) name of the custom tab class.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="TabRefType">
		<xsd:attribute name="idref" type="xsd:NCName" use="required">
			<xsd:annotation>
				<xsd:documentation>The id of the tab which should be used here.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
	</xsd:complexType>

	<xsd:complexType name="ListLayoutType">
		<xsd:complexContent>
			<xsd:extension base="LayoutType">
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="attribute" type="AttributeChipType">
						<xsd:annotation>
							<xsd:documentation>Describes an attribute editor.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="customattributechip" type="CustomAttributeChipType">
						<xsd:annotation>
							<xsd:documentation>Describes a custom attribute editor chip.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="customchip" type="CustomChipType">
						<xsd:annotation>
							<xsd:documentation>
								Configures a custom attribute editor which is not necessarily an attribute chip 
								This way you could provide you own class (with own parameters) and/or your own jsp.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="table" type="TableType">
						<xsd:annotation>
							<xsd:documentation>Describes a (nested) table layout of the type's attributes.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="listlayout" type="ListLayoutType">
						<xsd:annotation>
							<xsd:documentation>Describes a (nested) list layout of the type's attributes.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="inlineshortcut" type="InlineShortcutType">
						<xsd:annotation>
							<xsd:documentation>
								Adds a so called inlineshortcut. This is a (short) result list of a search for this item (or one
								of its attributes) within other types/items.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>										
					<xsd:element name="shortcut" type="ShortcutType">
						<xsd:annotation>
							<xsd:documentation>
								A so called shortcut (a button) to the search or creation of other items which contain
								this item or one of its attributes.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="action" type="ActionType">
						<xsd:annotation>
							<xsd:documentation>Adds an item action to this type's editor.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>					
					<xsd:element name="text" type="TextChipType">
						<xsd:annotation>
							<xsd:documentation>Describes an attribute editor.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:attribute name="colspan" type="xsd:positiveInteger" use="optional" default="1">
					<xsd:annotation>
						<xsd:documentation>Just like in an html table this configures the column spanning of a td element.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rowspan" type="xsd:positiveInteger" use="optional" default="1">
					<xsd:annotation>
						<xsd:documentation>Just like in an html table this configures the row spanning of a td element.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="mode" type="modeType" use="optional">
					<xsd:annotation>
						<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ColumnLayoutType">
		<xsd:complexContent>
			<xsd:extension base="LayoutType">
				<xsd:choice>
					<xsd:element name="row" type="RowType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Describes one row of a columnlayout. A row can contain up to 2 elements (a columnlayout is a table containing only 2 columns).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:attribute name="leftwidth" type="xsd:positiveInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>Explicitly set the width of the left column.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="rightwidth" type="xsd:positiveInteger" use="optional">
					<xsd:annotation>
						<xsd:documentation>Explicitly set the width of the right column.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="mode" type="modeType" use="optional">
					<xsd:annotation>
						<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="RowType">
		<xsd:complexContent>
			<xsd:extension base="LayoutType">
				<xsd:choice minOccurs="1" maxOccurs="2">
					<xsd:element name="attribute" type="AttributeChipType">
						<xsd:annotation>
							<xsd:documentation>Describes an attribute editor.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="customattributechip" type="CustomAttributeChipType">
						<xsd:annotation>
							<xsd:documentation>Describes a custom attribute editor chip.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="customchip" type="CustomChipType">
						<xsd:annotation>
							<xsd:documentation>
								Configures a custom attribute editor which is not necessarily an attribute chip 
								This way you could provide you own class (with own parameters) and/or your own jsp.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="inlineshortcut" type="InlineShortcutType">
						<xsd:annotation>
							<xsd:documentation>
								Adds a so called inlineshortcut. This is a (short) result list of a search for this item (or one
								of its attributes) within other types/items.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>										
					<xsd:element name="shortcut" type="ShortcutType">
						<xsd:annotation>
							<xsd:documentation>
								A so called shortcut (a button) to the search or creation of other items which contain
								this item or one of its attributes.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="action" type="ActionType">
						<xsd:annotation>
							<xsd:documentation>Adds an item action to this type's editor.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>					
					<xsd:element name="text" type="TextChipType">
						<xsd:annotation>
							<xsd:documentation>Describes an attribute editor.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="void" type="VoidType">
						<xsd:annotation>
							<xsd:documentation>Describes a void element.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
				<xsd:attribute name="position" type="xsd:integer" use="optional">
					<xsd:annotation>
						<xsd:documentation>The position of this row within the columlayout.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>		
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

<!-- type - defaultreference -->

	<xsd:complexType name="DefaultReferenceType">
		<xsd:sequence>
			<xsd:element name="itemlayout" type="DefaultReferenceAttributeCollectionType" maxOccurs="1" minOccurs="1">
				<xsd:annotation>
					<xsd:documentation>
						Lists a number of attributes which are shown when items of 
						this type are referenced in other editors etc.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="searchattribute" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Defines which attribute is used for reference searches (e.g. in the smartreferenceeditor).</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="sortattribute" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Defines which attribute is used to sort search results 
					(if you sort by the row containing an attribute of the enclosing type).
					Since 3.1-u3.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="showempty" type="xsd:boolean" use="optional" default="true">
			<xsd:annotation>
				<xsd:documentation>
					If 'true' empty attributes will be shown in the reference (e.g. like 'xyz - empty - 123')
					instead of simply obmitting the appropriate attribute.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="noselectionname" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Specifies the localization key whose value will be displayed as null value (no selection) if 'useselector' option is used for type.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="DefaultReferenceAttributeCollectionType">
		<xsd:sequence>
			<xsd:element name="attribute" type="DefaultReferenceAttributeType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Describes one attribute in this list.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	<xsd:attribute name="mode" type="modeType" use="optional"/>
	<xsd:attribute name="position" type="xsd:integer" use="optional"/>
	</xsd:complexType>
	
	<xsd:complexType name="DefaultReferenceAttributeType">
		<xsd:complexContent>
			<xsd:extension base="AttributeType">
				<xsd:attribute name="fallback" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>Fallback attribute used if attribute value is 'null'</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ShortcutType">
		<xsd:sequence>
			<xsd:element name="preset" type="PresetType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Set some presets for the search which is triggered by the shortcut.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="comparator" type="ComparatorType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>You can provide a custom comparator class to affect result list sorting.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="restrictor" type="ComparatorType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>You can provide a custom restrictor class to affect the result list's content.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="parameter" type="ParameterType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>You can provide a custom restrictor class to affect the result list's content.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="usage" use="required">
			<xsd:annotation>
				<xsd:documentation>Sets the function of this shortcut (finder, creator, special).</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="finder">
						<xsd:annotation>
							<xsd:documentation>The shortcut will trigger a search.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="creator">
						<xsd:annotation>
							<xsd:documentation>The shortcut will trigger the creation of a new item.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="special">
						<xsd:annotation>
							<xsd:documentation>The shortcut will trigger some custom operation.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="link">
						<xsd:annotation>
							<xsd:documentation>The shortcut will mimic a url link with the given parameters (key/value pairs).</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="type" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The type which should be searched/created.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="typesfromattribute" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					The attribute which contains a collection of valid types which may be created using this shortcut.
					This way you can restrict the possible (sub)types to be created.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>
					The name of the shortcut. Will be used as a key to look up a localized string
					which in turn will be used as the shortcut's label.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="icon" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					The icon url to use in the button of the shortcut. Is currently only used for shortcuts of type "link".
					("creator" and "finder" use standard icons and the "special" shortcut gets the icon url from the given
					class).
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="autoperform" type="xsd:boolean" use="optional" default="false">
			<xsd:annotation>
				<xsd:documentation>
					If 'true' the search will be immediately performed when the shortcut is clicked
					and the result will show up (instead of requiring another 'search button' to be clicked).
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="classname" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The (fully qualified) name of the class to be used if this is a 'special' shorcut.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="PresetType">
		<xsd:attribute name="targetattribute" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>Sets the targetattribute, meaning the attribute of the type to search for.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="sourceattribute" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Sets the sourceattribute, meaning the attribute of the source type where the search is started 
					and which should match the content of the targetattribute.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="ComparatorType">
		<xsd:attribute name="classname" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The (fully qualified) name of the comparator class.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="InlineShortcutType">
		<xsd:sequence>
			<xsd:element name="preset" type="PresetType" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Sets a preset for the search which is done by the shortcut.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="itemlayout" type="ItemDisplayLayoutType" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>Configures the attributes (columns) of the list.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>Sets a name for the inlineshortcut. Will be used as a key to lookup a localized label. Default is "".</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="type" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The type of the items to search for. Default is Item.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
		<xsd:attribute name="maxcount" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>The maximum number of items to be shown. Default is 5.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
		<xsd:attribute name="width" type="xsd:positiveInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation>Width of the inlineshortcut list.</xsd:documentation>
			</xsd:annotation>						
		</xsd:attribute>		
		<xsd:attribute name="labelwidth" type="xsd:nonNegativeInteger" use="optional">
			<xsd:annotation>
				<xsd:documentation>Width of the attribute label</xsd:documentation>
			</xsd:annotation>						
		</xsd:attribute>		
		<xsd:attribute name="hidelabel" type="xsd:boolean" use="optional">
			<xsd:annotation>
				<xsd:documentation>If 'true' the label of the attribute will not be shown. Default is false.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>		
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

<!-- some (abstract) super types -->

	<xsd:complexType name="ItemLayoutType" abstract="true">
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
		
	<xsd:complexType name="AttributeType">
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="mode" type="modeType" use="optional">
			<xsd:annotation>
				<xsd:documentation>Mode can be one of 'append', 'replace' or 'delete'. Default is 'append'.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="position" type="xsd:integer" use="optional"/>
	</xsd:complexType>
	
	<xsd:complexType name="AttributeLayoutType">
		<xsd:complexContent>
			<xsd:extension base="AttributeType">
				<xsd:attribute name="width" type="xsd:string" use="optional" />
				<xsd:attribute name="height" type="xsd:string" use="optional" />
				<xsd:attribute name="jsp" type="xsd:string" use="optional" />
				<xsd:attribute name="title" type="xsd:string" use="optional" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="LayoutType" abstract="true">
		<xsd:attribute name="width" type="xsd:string" use="optional" />
		<xsd:attribute name="height" type="xsd:string" use="optional" />

	</xsd:complexType>

</xsd:schema>